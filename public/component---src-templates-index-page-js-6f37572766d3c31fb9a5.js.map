{"version":3,"sources":["webpack:///./src/components/blog-list-home.js","webpack:///./src/templates/index-page.js","webpack:///./src/components/post-card.js"],"names":["PostMaker","data","className","class","to","BlogListHome","query","render","posts","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","key","id","pageQuery","HomePage","markdownRemark","html","Image","featuredImage","childImageSharp","fluid","title","tagline","dangerouslySetInnerHTML","__html","cta","ctaLink","ctaText","alt","PostCard","slug","objectFit","objectPosition"],"mappings":"6OAMMA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,6BAASC,UAAU,cACjB,yCAAc,wCAAd,IAAoC,0BAAMC,MAAM,eAAc,kBAAC,IAAD,QAC9D,yBAAKD,UAAU,yBACZD,GAEH,kBAAC,OAAD,CAAMC,UAAU,SAASE,GAAG,SAA5B,WAA4C,0BAAMD,MAAM,eAAc,kBAAC,IAAD,UAI3D,SAASE,IACtB,OACE,kBAAC,cAAD,CACEC,MAAK,YA8BLC,OAAS,SAAAN,GACL,IAAMO,EAAQP,EAAKQ,kBAAkBC,MAClCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,QACvCC,KAAI,SAAAJ,GAAI,OACP,kBAAC,IAAD,CAAUK,IAAKL,EAAKC,KAAKK,GAAIjB,KAAMW,EAAKC,UAE5C,OAAO,kBAAC,EAAD,CAAWZ,KAAMO,O,gBC9CrBW,EAAS,aAwDPC,UA7BE,SAAC,GAAc,IACtBC,EADqB,EAAXpB,KACVoB,eACAP,EAAsBO,EAAtBP,YAAaQ,EAASD,EAATC,KACfC,EAAQT,EAAYU,cAAgBV,EAAYU,cAAcC,gBAAgBC,MAAQ,GAC7F,OACC,kBAAC,IAAD,KACI,kBAAC,IAAD,MACA,yBAAKxB,UAAU,gCACb,6BACE,wBAAIC,MAAM,SAASW,EAAYa,OAC/B,uBAAGxB,MAAM,WAAWW,EAAYc,SAChC,yBAAK1B,UAAU,cAAc2B,wBAAyB,CAACC,OAAQR,KAC/D,kBAAC,OAAD,CAAMlB,GAAIU,EAAYiB,IAAIC,QAAS9B,UAAU,UAAUY,EAAYiB,IAAIE,QAAQ,0BAAM9B,MAAM,eAAc,kBAAC,IAAD,SAE3G,6BACGoB,EACC,kBAAC,IAAD,CACEG,MAAOH,EACPW,IAAKpB,EAAYa,MAAQ,oBACzBzB,UAAU,mBAEV,KAGR,kBAACG,EAAD,S,kCC5DN,0DA0Be8B,IAtBE,SAAC,GAAD,IAAGlC,EAAH,EAAGA,KAAH,OACf,6BAASC,UAAU,aAChBD,EAAKa,YAAYU,cAEd,kBAAC,OAAD,CAAMpB,GAAIH,EAAKa,YAAYsB,MACzB,kBAAC,IAAD,CACEV,MAAOzB,EAAKa,YAAYU,cAAcC,gBAAgBC,MACtDW,UAAU,QACVC,eAAe,UACfJ,IAAKjC,EAAKa,YAAYa,MAAQ,oBAC9BzB,UAAU,oBAGZ,GAEN,yBAAKC,MAAM,gBACT,wBAAID,UAAU,SAAQ,kBAAC,OAAD,CAAME,GAAIH,EAAKa,YAAYsB,MAAOnC,EAAKa,YAAYa,QACzE,uBAAGzB,UAAU,QAAO,8BAAOD,EAAKa,YAAYC","file":"component---src-templates-index-page-js-6f37572766d3c31fb9a5.js","sourcesContent":["import React from \"react\"\nimport { Link, StaticQuery, graphql } from \"gatsby\"\nimport { RiArrowDownLine, RiArrowRightSLine } from \"react-icons/ri\"\n\nimport PostCard from \"./post-card\"\n\nconst PostMaker = ({ data }) => (\n  <section className=\"home-posts\">\n    <h2>Latest in <strong>Blog</strong> <span class=\"icon -right\"><RiArrowDownLine/></span></h2>\n    <div className=\"grids col-1 sm-2 lg-3\">\n      {data}\n    </div>\n    <Link className=\"button\" to=\"/blog\">See more<span class=\"icon -right\"><RiArrowRightSLine/></span></Link>\n  </section>\n)\n\nexport default function BlogListHome() {\n  return (\n    <StaticQuery \n      query={graphql`\n        query {\n          allMarkdownRemark(\n            sort: { order: DESC, fields: [frontmatter___date] }\n            filter: { frontmatter: { template: { eq: \"blog-post\" } } }\n            limit: 6\n          ) {\n            edges {\n              node {\n                id\n                excerpt(pruneLength: 250)\n                frontmatter {\n                  date(formatString: \"MMMM DD, YYYY\")\n                  slug\n                  title\n                  featuredImage {\n                    childImageSharp {\n                      fluid(maxWidth: 540, maxHeight: 360, quality: 80) {\n                        ...GatsbyImageSharpFluid\n                        ...GatsbyImageSharpFluidLimitPresentationSize\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }`\n      }\n\n      render={ data => {\n          const posts = data.allMarkdownRemark.edges\n            .filter(edge => !!edge.node.frontmatter.date)\n            .map(edge =>\n              <PostCard key={edge.node.id} data={edge.node} />\n          )\n          return <PostMaker data={posts} />\n        } \n      }\n    />\n  )\n}","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { RiArrowRightSLine } from \"react-icons/ri\"\n\nimport Layout from \"../components/layout\"\nimport BlogListHome from \"../components/blog-list-home\"\nimport SEO from \"../components/seo\"\n\nexport const pageQuery = graphql`\n  query HomeQuery($id: String!){\n\t\tmarkdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        title\n        tagline\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 480, maxHeight: 380, quality: 80, srcSetBreakpoints: [960, 1440]) {\n              ...GatsbyImageSharpFluid\n            }\n            sizes {\n              src\n            }\n          }\n        }\n        cta {\n          ctaText\n          ctaLink\n        }\n      }\n    }\n  }\n`\n\nconst HomePage = ({ data }) => {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark\n  const Image = frontmatter.featuredImage ? frontmatter.featuredImage.childImageSharp.fluid : \"\"\n\treturn (\n\t\t<Layout>\n      <SEO/>\n      <div className=\"home-banner grids col-1 sm-2\">\n        <div>\n          <h1 class=\"title\">{frontmatter.title}</h1>\n          <p class=\"tagline\">{frontmatter.tagline}</p>\n          <div className=\"description\" dangerouslySetInnerHTML={{__html: html}}/>\n          <Link to={frontmatter.cta.ctaLink} className=\"button\">{frontmatter.cta.ctaText}<span class=\"icon -right\"><RiArrowRightSLine/></span></Link>\n        </div>\n        <div>\n          {Image ? (\n            <Img \n              fluid={Image} \n              alt={frontmatter.title + ' - Featured image'}\n              className=\"featured-image\"\n            />\n          ) : \"\"}\n        </div>\n      </div>\n      <BlogListHome/>\n\t\t</Layout>\n\t)\n}\n\nexport default HomePage\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst PostCard = ({ data }) => (\n  <article className=\"post-card\">\n    {data.frontmatter.featuredImage ? \n      (\n        <Link to={data.frontmatter.slug}>\n          <Img \n            fluid={data.frontmatter.featuredImage.childImageSharp.fluid} \n            objectFit=\"cover\"\n            objectPosition=\"50% 50%\"\n            alt={data.frontmatter.title + ' - Featured image'}\n            className=\"featured-image\"\n          />\n        </Link>\n      ) : \"\"\n    }\n    <div class=\"post-content\">\n      <h2 className=\"title\"><Link to={data.frontmatter.slug}>{data.frontmatter.title}</Link></h2>\n      <p className=\"meta\"><time>{data.frontmatter.date}</time></p>\n    </div>\n  </article>\n)\n\nexport default PostCard"],"sourceRoot":""}