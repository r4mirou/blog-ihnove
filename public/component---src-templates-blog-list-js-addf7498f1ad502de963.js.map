{"version":3,"sources":["webpack:///./src/templates/blog-list.js","webpack:///./src/components/post-card.js"],"names":["blogListQuery","Pagination","props","className","isFirst","to","prevPage","rel","Array","from","length","numPages","_","i","key","blogSlug","currentPage","isLast","nextPage","BlogIndex","render","data","this","pageContext","toString","posts","allMarkdownRemark","edges","filter","edge","node","frontmatter","date","map","id","title","description","React","Component","PostCard","featuredImage","slug","fluid","childImageSharp","objectFit","objectPosition","alt","class"],"mappings":"kPAQaA,EAAa,YA8BpBC,EAAa,SAACC,GAAD,OACjB,yBAAKC,UAAU,cACb,6BACID,EAAME,SACN,4BACE,kBAAC,OAAD,CAAMC,GAAIH,EAAMI,SAAUC,IAAI,QAC9B,0BAAMJ,UAAU,cAAa,kBAAC,IAAD,OAD7B,cAKHK,MAAMC,KAAK,CAAEC,OAAQR,EAAMS,WAAY,SAACC,EAAGC,GAAJ,OACtC,wBAAIC,IAAG,qBAAsBD,EAAI,IAC/B,kBAAC,OAAD,CACER,GAAE,GAAKH,EAAMa,UAAiB,IAANF,EAAU,GAAKA,EAAI,GAC3CV,UAAWD,EAAMc,cAAgBH,EAAI,EAAI,gBAAkB,OAE1DA,EAAI,QAITX,EAAMe,QACN,4BACE,kBAAC,OAAD,CAAMZ,GAAIH,EAAMgB,SAAUX,IAAI,QAA9B,QACO,0BAAMJ,UAAU,eAAc,kBAAC,IAAD,YAOzCgB,E,kGACJC,OAAA,WAAU,IAEAC,EAASC,KAAKpB,MAAdmB,KAFD,EAG2BC,KAAKpB,MAAMqB,YAArCP,EAHD,EAGCA,YAAaL,EAHd,EAGcA,SAEfP,EAA0B,IAAhBY,EACVC,EAASD,IAAgBL,EACzBL,EAAWU,EAAc,GAAM,EAHpB,mBAG+CA,EAAc,GAAGQ,WAC3EN,EAJW,UAIYF,EAAc,GAAGQ,WAExCC,EAAQJ,EAAKK,kBAAkBC,MAClCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,QACvCC,KAAI,SAAAJ,GAAI,OACP,kBAAC,IAAD,CAAUf,IAAKe,EAAKC,KAAKI,GAAIb,KAAMQ,EAAKC,UAExC5B,EAAQ,CACVE,UACAE,WACAK,WACAI,SAfe,SAgBfC,cACAC,SACAC,YAGF,OACE,kBAAC,IAAD,CAAQf,UAAU,aAChB,kBAAC,IAAD,CACEgC,MAAO,eAAiBnB,EAAc,OAASL,EAC/CyB,YAAa,4BAA8BpB,EAAc,OAASL,IAEpE,oCACA,yBAAKR,UAAU,yBACZsB,GAEH,kBAACxB,EAAeC,K,GApCAmC,IAAMC,WA0CfnB,a,kCC9Gf,0DA0BeoB,IAtBE,SAAC,GAAD,IAAGlB,EAAH,EAAGA,KAAH,OACf,6BAASlB,UAAU,aAChBkB,EAAKU,YAAYS,cAEd,kBAAC,OAAD,CAAMnC,GAAIgB,EAAKU,YAAYU,MACzB,kBAAC,IAAD,CACEC,MAAOrB,EAAKU,YAAYS,cAAcG,gBAAgBD,MACtDE,UAAU,QACVC,eAAe,UACfC,IAAKzB,EAAKU,YAAYI,MAAQ,oBAC9BhC,UAAU,oBAGZ,GAEN,yBAAK4C,MAAM,gBACT,wBAAI5C,UAAU,SAAQ,kBAAC,OAAD,CAAME,GAAIgB,EAAKU,YAAYU,MAAOpB,EAAKU,YAAYI,QACzE,uBAAGhC,UAAU,QAAO,8BAAOkB,EAAKU,YAAYC","file":"component---src-templates-blog-list-js-addf7498f1ad502de963.js","sourcesContent":["import React from \"react\"\nimport { Link , graphql } from \"gatsby\"\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\n\nimport Layout from \"../components/layout\"\nimport PostCard from \"../components/post-card\"\nimport SEO from \"../components/seo\"\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"blog-post\" } } }\n      limit: $limit\n      skip: $skip\n\t\t) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tfeaturedImage {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid(maxWidth: 540, maxHeight: 360, quality: 80) {\n                  ...GatsbyImageSharpFluid\n                  ...GatsbyImageSharpFluidLimitPresentationSize\n                }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n          }\n        }\n      }\n    }\n  }\n`\nconst Pagination = (props) => (\n  <div className=\"pagination\">\n    <ul>\n      {!props.isFirst && (\n        <li>\n          <Link to={props.prevPage} rel=\"prev\">\n          <span className=\"icon -left\"><RiArrowLeftLine/></span> Previous\n          </Link>\n        </li>\n      )}\n      {Array.from({ length: props.numPages }, (_, i) => (\n        <li key={`pagination-number${i + 1}`} >\n          <Link\n            to={`${props.blogSlug}${i === 0 ? '' : i + 1}`}\n            className={props.currentPage === i + 1 ? \"is-active num\" : \"num\"}\n          >\n            {i + 1}\n          </Link>\n        </li>\n      ))}\n      {!props.isLast && (\n        <li>\n          <Link to={props.nextPage} rel=\"next\">\n            Next <span className=\"icon -right\"><RiArrowRightLine/></span>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </div>\n)\nclass BlogIndex extends React.Component {\n  render() {\n    \n    const { data } = this.props\n    const { currentPage, numPages } = this.props.pageContext\n    const blogSlug = '/blog/' \n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? blogSlug : blogSlug + (currentPage - 1).toString()\n    const nextPage = blogSlug + (currentPage + 1).toString()\n\n    const posts = data.allMarkdownRemark.edges\n      .filter(edge => !!edge.node.frontmatter.date)\n      .map(edge =>\n        <PostCard key={edge.node.id} data={edge.node} />\n      )\n    let props = {\n      isFirst,\n      prevPage,\n      numPages,\n      blogSlug,\n      currentPage,\n      isLast,\n      nextPage\n    }\n    \n    return (\n      <Layout className=\"blog-page\">\n        <SEO\n          title={\"Blog â€” Page \" + currentPage + \" of \" + numPages}\n          description={\"Stackrole base blog page \" + currentPage + \" of \" + numPages }\n        />\n        <h1>Blog</h1>\n        <div className=\"grids col-1 sm-2 lg-3\">\n          {posts}\n        </div>\n        <Pagination {...props} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst PostCard = ({ data }) => (\n  <article className=\"post-card\">\n    {data.frontmatter.featuredImage ? \n      (\n        <Link to={data.frontmatter.slug}>\n          <Img \n            fluid={data.frontmatter.featuredImage.childImageSharp.fluid} \n            objectFit=\"cover\"\n            objectPosition=\"50% 50%\"\n            alt={data.frontmatter.title + ' - Featured image'}\n            className=\"featured-image\"\n          />\n        </Link>\n      ) : \"\"\n    }\n    <div class=\"post-content\">\n      <h2 className=\"title\"><Link to={data.frontmatter.slug}>{data.frontmatter.title}</Link></h2>\n      <p className=\"meta\"><time>{data.frontmatter.date}</time></p>\n    </div>\n  </article>\n)\n\nexport default PostCard"],"sourceRoot":""}