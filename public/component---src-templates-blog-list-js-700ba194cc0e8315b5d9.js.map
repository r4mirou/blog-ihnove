{"version":3,"sources":["webpack:///./src/components/post-card.js","webpack:///./src/templates/blog-list.js"],"names":["PostCard","data","className","frontmatter","featuredImage","to","slug","fluid","childImageSharp","objectFit","objectPosition","alt","title","class","date","blogListQuery","Pagination","props","isFirst","prevPage","rel","Array","from","length","numPages","_","i","key","blogSlug","currentPage","isLast","nextPage","BlogIndex","render","this","pageContext","toString","posts","allMarkdownRemark","edges","filter","edge","node","map","id","description","React","Component"],"mappings":"+OA4BeA,EAxBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BAASC,UAAU,wBACjB,yBAAKA,UAAU,aACZD,EAAKE,YAAYC,cAEd,kBAAC,OAAD,CAAMC,GAAIJ,EAAKE,YAAYG,MACzB,kBAAC,IAAD,CACEC,MAAON,EAAKE,YAAYC,cAAcI,gBAAgBD,MACtDE,UAAU,QACVC,eAAe,UACfC,IAAKV,EAAKE,YAAYS,MAAQ,oBAC9BV,UAAU,oBAGZ,GAEN,yBAAKW,MAAM,gBACT,wBAAIX,UAAU,SAAQ,kBAAC,OAAD,CAAMG,GAAIJ,EAAKE,YAAYG,MAAOL,EAAKE,YAAYS,QACzE,uBAAGV,UAAU,QAAO,8BAAOD,EAAKE,YAAYW,W,YCdvCC,EAAa,YA8BpBC,EAAa,SAACC,GAAD,OACjB,yBAAKf,UAAU,cACb,6BACIe,EAAMC,SACN,4BACE,kBAAC,OAAD,CAAMb,GAAIY,EAAME,SAAUC,IAAI,QAC5B,0BAAMlB,UAAU,cAAa,kBAAC,IAAD,OAD/B,cAKHmB,MAAMC,KAAK,CAAEC,OAAQN,EAAMO,WAAY,SAACC,EAAGC,GAAJ,OACtC,wBAAIC,IAAG,qBAAsBD,EAAI,IAC/B,kBAAC,OAAD,CACErB,GAAE,GAAKY,EAAMW,UAAiB,IAANF,EAAU,GAAKA,EAAI,GAC3CxB,UAAWe,EAAMY,cAAgBH,EAAI,EAAI,gBAAkB,OAE1DA,EAAI,QAITT,EAAMa,QACN,4BACE,kBAAC,OAAD,CAAMzB,GAAIY,EAAMc,SAAUX,IAAI,QAA9B,WACU,0BAAMlB,UAAU,eAAc,kBAAC,IAAD,YAO5C8B,E,kGACJC,OAAA,WAAU,IAEAhC,EAASiC,KAAKjB,MAAdhB,KAFD,EAG2BiC,KAAKjB,MAAMkB,YAArCN,EAHD,EAGCA,YAAaL,EAHd,EAGcA,SAEfN,EAA0B,IAAhBW,EACVC,EAASD,IAAgBL,EACzBL,EAAWU,EAAc,GAAM,EAHpB,SAG+CA,EAAc,GAAGO,WAC3EL,EAJW,KAIYF,EAAc,GAAGO,WAExCC,EAAQpC,EAAKqC,kBAAkBC,MAClCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKvC,YAAYW,QACvC6B,KAAI,SAAAF,GAAI,OACP,kBAAC,EAAD,CAAUd,IAAKc,EAAKC,KAAKE,GAAI3C,KAAMwC,EAAKC,UAExCzB,EAAQ,CACVC,UACAC,WACAK,WACAI,SAfe,IAgBfC,cACAC,SACAC,YAGF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEnB,MAAO,eAAiBiB,EAAc,OAASL,EAC/CqB,YAAa,aAAehB,EAAc,OAASL,IAErD,yBAAKtB,UAAU,yBACZmC,GAEH,kBAAC,EAAepB,K,GAnCA6B,IAAMC,WAyCff","file":"component---src-templates-blog-list-js-700ba194cc0e8315b5d9.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nconst PostCard = ({ data }) => (\n  <article className=\"post-card-background\">\n    <div className=\"post-card\">\n      {data.frontmatter.featuredImage ?\n        (\n          <Link to={data.frontmatter.slug}>\n            <Img\n              fluid={data.frontmatter.featuredImage.childImageSharp.fluid}\n              objectFit=\"cover\"\n              objectPosition=\"50% 50%\"\n              alt={data.frontmatter.title + ' - Featured image'}\n              className=\"featured-image\"\n            />\n          </Link>\n        ) : \"\"\n      }\n      <div class=\"post-content\">\n        <h2 className=\"title\"><Link to={data.frontmatter.slug}>{data.frontmatter.title}</Link></h2>\n        <p className=\"meta\"><time>{data.frontmatter.date}</time></p>\n      </div>\n    </div>\n  </article>\n)\n\nexport default PostCard","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\n\nimport Layout from \"../components/layout\"\nimport PostCard from \"../components/post-card\"\nimport SEO from \"../components/seo\"\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { template: { eq: \"blog-post\" } } }\n      limit: $limit\n      skip: $skip\n\t\t) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tfeaturedImage {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid(maxWidth: 540, maxHeight: 360, quality: 80) {\n                  ...GatsbyImageSharpFluid\n                  ...GatsbyImageSharpFluidLimitPresentationSize\n                }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n          }\n        }\n      }\n    }\n  }\n`\nconst Pagination = (props) => (\n  <div className=\"pagination\">\n    <ul>\n      {!props.isFirst && (\n        <li>\n          <Link to={props.prevPage} rel=\"prev\">\n            <span className=\"icon -left\"><RiArrowLeftLine /></span> Anterior\n          </Link>\n        </li>\n      )}\n      {Array.from({ length: props.numPages }, (_, i) => (\n        <li key={`pagination-number${i + 1}`} >\n          <Link\n            to={`${props.blogSlug}${i === 0 ? '' : i + 1}`}\n            className={props.currentPage === i + 1 ? \"is-active num\" : \"num\"}\n          >\n            {i + 1}\n          </Link>\n        </li>\n      ))}\n      {!props.isLast && (\n        <li>\n          <Link to={props.nextPage} rel=\"next\">\n            Próximo <span className=\"icon -right\"><RiArrowRightLine /></span>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </div>\n)\nclass BlogIndex extends React.Component {\n  render() {\n\n    const { data } = this.props\n    const { currentPage, numPages } = this.props.pageContext\n    const blogSlug = '/'\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? blogSlug : blogSlug + (currentPage - 1).toString()\n    const nextPage = blogSlug + (currentPage + 1).toString()\n\n    const posts = data.allMarkdownRemark.edges\n      .filter(edge => !!edge.node.frontmatter.date)\n      .map(edge =>\n        <PostCard key={edge.node.id} data={edge.node} />\n      )\n    let props = {\n      isFirst,\n      prevPage,\n      numPages,\n      blogSlug,\n      currentPage,\n      isLast,\n      nextPage\n    }\n\n    return (\n      <Layout>\n        <SEO\n          title={\"Blog — Page \" + currentPage + \" of \" + numPages}\n          description={\"blog page \" + currentPage + \" of \" + numPages}\n        />\n        <div className=\"grids col-1 sm-2 lg-3\">\n          {posts}\n        </div>\n        <Pagination {...props} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex"],"sourceRoot":""}